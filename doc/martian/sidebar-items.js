initSidebarItems({"enum":[["LevelFilter","An enum representing the available verbosity level filters of the logger."],["StageError",""],["StageKind",""]],"fn":[["handle_stage_error",""],["initialize",""],["log_panic","Log a panic to the martian output machinery"],["make_timestamp",""],["make_timestamp_now",""],["martian_main",""],["martian_main_with_log_level",""],["martian_make_mro",""]],"macro":[["format_err","Constructs an `Error` using the standard string interpolation syntax."],["martian_stages",""]],"mod":[["mro","This module is an attempt at defining traits that would help auto generate mro definitions for a stage from a Rust stage. Previous attempt, named `cargo-martian`, which is a compiler plugin works pretty good, but that will work only in nightly builds and uses a fairly unstable part of the compiler. Here we try to rework the same problem from a different angle using procedural macros."],["prelude",""],["types",""],["utils",""]],"struct":[["Error","The `Error` type, which can contain any failure."],["MartianRover",""],["Metadata","Tracking the metadata for one Martian chunk invocation"],["Resource","Memory/ thread request can be negative in matrian http://martian-lang.org/advanced-features/#resource-consumption"],["StageDef",""]],"trait":[["MartianMain",""],["MartianStage",""],["RawMartianStage",""]],"type":[["Json",""],["JsonDict",""]]});